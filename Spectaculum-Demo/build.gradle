apply plugin: 'com.android.application'

android {
    compileSdk 33
    buildFeatures {
        buildConfig = true
    }
    defaultConfig {
        minSdk 16
        targetSdk 33
        versionCode 1
        versionName '1.0'
    }

    signingConfigs {
        debug   // configured in signingconfig.gradle
        release // configured in signingconfig.gradle
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    namespace 'net.protyposis.android.spectaculumdemo'
    lint {
        // Lint fix for Okio: https://github.com/square/okio/issues/58
        warning 'InvalidPackage'
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.name == android.buildTypes.release.name) {
                output.outputFileName = output.outputFileName.replace(".apk", "-" + defaultConfig.versionCode + "-" + defaultConfig.versionName + ".apk")
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.fragment:fragment:1.5.7"
    implementation 'net.protyposis.android.mediaplayer:mediaplayer:4.3.0'
    implementation 'com.google.android.exoplayer:exoplayer:r1.5.10'
    implementation project(':Spectaculum-Core')
    implementation project(':Spectaculum-Camera')
    implementation project(':Spectaculum-Image')
    implementation project(':Spectaculum-MediaPlayer')
    implementation project(':Spectaculum-MediaPlayerExtended')
    implementation project(':Spectaculum-Effect-FlowAbs')
    implementation project(':Spectaculum-Effect-QrMarker')
    implementation project(':Spectaculum-Effect-Immersive')
    implementation platform('com.google.firebase:firebase-bom:32.7.2')
    implementation 'com.google.firebase:firebase-crashlytics'
}

ext.isLibrary = false
apply from: "../gitversioning.gradle"
apply from: "signingconfig.gradle"

def firebaseConfigFile = file("google-services.json");
if (!firebaseConfigFile.exists()) {
    project.logger.error("Firebase config file for Crashlytics not found at ${firebaseConfigFile.absolutePath}. Please download the file from the Firebase Console and put it there.")
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
